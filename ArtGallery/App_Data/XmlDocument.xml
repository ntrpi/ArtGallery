<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ArtGallery</name>
    </assembly>
    <members>
        <member name="M:ArtGallery.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:ArtGallery.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:ArtGallery.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,ArtGallery.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:ArtGallery.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:ArtGallery.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:ArtGallery.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:ArtGallery.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:ArtGallery.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:ArtGallery.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:ArtGallery.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ArtGallery.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:ArtGallery.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:ArtGallery.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:ArtGallery.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:ArtGallery.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:ArtGallery.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:ArtGallery.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:ArtGallery.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:ArtGallery.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:ArtGallery.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:ArtGallery.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:ArtGallery.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:ArtGallery.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:ArtGallery.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:ArtGallery.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:ArtGallery.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ArtGallery.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:ArtGallery.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:ArtGallery.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:ArtGallery.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:ArtGallery.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:ArtGallery.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,ArtGallery.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,ArtGallery.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:ArtGallery.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:ArtGallery.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:ArtGallery.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(ArtGallery.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:ArtGallery.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:ArtGallery.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},ArtGallery.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:ArtGallery.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:ArtGallery.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:ArtGallery.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageSampleKey.#ctor(ArtGallery.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:ArtGallery.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:ArtGallery.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:ArtGallery.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,ArtGallery.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:ArtGallery.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:ArtGallery.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:ArtGallery.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:ArtGallery.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:ArtGallery.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:ArtGallery.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:ArtGallery.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:ArtGallery.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:ArtGallery.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:ArtGallery.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ArtGallery.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:ArtGallery.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:ArtGallery.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:ArtGallery.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:ArtGallery.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:ArtGallery.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:ArtGallery.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ArtGallery.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="M:ArtGallery.Controllers.FormsDataController.getFormDtoFromForm(ArtGallery.Models.Form)">
            <summary>
            A utility function to create a FormDto object with the data from a Form object.
            </summary>
            <param name="form">A Form object.</param>
            <returns>A FormDto object containing the information in form.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.FormsDataController.GetFormDto(System.Int32)">
            <summary>
            Get a FormDto created with the information in the Form in the database with the given id.
            </summary>
            <param name="id">An integer representing the id of the required Form.</param>
            <returns>A FormDto object.</returns>
            <example>
            GET: api/FormsData/5
            </example>
        </member>
        <member name="M:ArtGallery.Controllers.FormsDataController.getForms">
            <summary>
            We only want to send back FormDto objects, so this is a private utility function
            that retrieves all the Forms from the database, which will be converted to FormDtos.
            </summary>
            <returns>A List of Form objects.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.FormsDataController.getFormDtos(System.Collections.Generic.IEnumerable{ArtGallery.Models.Form})">
            <summary>
            A private utility function to convert a collection of Form objects to FormDtos.
            </summary>
            <param name="forms">A collection of Form objects.</param>
            <returns>A collection of FormDto objects created with the data in the Forms that were passed in.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.FormsDataController.GetFormDtos">
            <summary>
            Get a collection of FormDto objects that represent all the Forms in the database.
            </summary>
            <returns>A collection of FormDto objects.</returns>
            <example>
            GET: api/FormsData
            </example>
        </member>
        <member name="M:ArtGallery.Controllers.FormsDataController.UpdateForm(System.Int32,ArtGallery.Models.Form)">
            <summary>
            Updates a Form in the database given information about the form.
            </summary>
            <param name="id">The form id.</param>
            <param name="form">A Form object, received as POST data.</param>
            <returns>If the update is successful, a NoContent status code is returned. 
            Otherwise, a NotFound ActionResult is returned.</returns>
            <example>
            POST: api/FormsData/UpdateForm/5
            FORM DATA: Form JSON Object
            </example>
        </member>
        <member name="M:ArtGallery.Controllers.FormsDataController.CreateForm(ArtGallery.Models.Form)">
            <summary>
            Creates a Form in the database given information about the form.
            </summary>
            <param name="form">A Form object, received as POST data.</param>
            <returns>If the creation is successful, an ActionResult with the id of the form is returned. 
            Otherwise, a BadRequest ActionResult is returned.</returns>
            <example>
            POST: api/FormsData/CreateForm
            FORM DATA: Form JSON Object
            </example>
        </member>
        <member name="M:ArtGallery.Controllers.FormsDataController.DeleteForm(System.Int32)">
            <summary>
            Deletes the Form in the database with the given id.
            </summary>
            <param name="id">The form id.</param>
            <returns>If the update is successful, an Ok status code is returned. 
            Otherwise, a NotFound ActionResult is returned.</returns>
            <example>
            DELETE: api/FormsData/5
            </example>
        </member>
        <member name="M:ArtGallery.Controllers.ImagesDataController.getImageDtoFromImage(ArtGallery.Models.Image)">
            <summary>
            A utility function to create an ImageDto object with the data from an Image object.
            </summary>
            <param name="image">An Image object.</param>
            <returns>An ImageDto object containing the information in the image.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.ImagesDataController.GetImageDto(System.Int32)">
            <summary>
            Get an ImageDto created with the information in the Image in the database with the given id.
            </summary>
            <param name="id">An integer representing the id of the required Image.</param>
            <returns>An ImageDto object.</returns>
            <example>
            GET: api/ImagesData/GetImageDto/5
            </example>
        </member>
        <member name="M:ArtGallery.Controllers.ImagesDataController.getImages">
            <summary>
            We only want to send back ImageDto objects, so this is a private utility function
            that retrieves all the Images from the database, which will be converted to ImageDtos.
            </summary>
            <returns>A List of Image objects.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.ImagesDataController.getImagesForPiece(System.Int32)">
            <summary>
            Get only the Images that have the given pieceId value.
            </summary>
            <param name="pieceId">The id of the Piece foreign key.</param>
            <returns>A collection of Image objects.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.ImagesDataController.getImageDtos(System.Collections.Generic.IEnumerable{ArtGallery.Models.Image})">
            <summary>
            A private utility function to convert a collection of Image objects to ImageDtos.
            </summary>
            <param name="forms">A collection of Image objects.</param>
            <returns>A collection of ImageDto objects created with the data in the Images that were passed in.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.ImagesDataController.GetImageDtos">
            <summary>
            Get a collection of ImageDto objects that represent all the Images in the database.
            </summary>
            <returns>A collection of ImageDto objects.</returns>
            <example>
            GET: api/ImagesData/GetImageDtos
            </example>
        </member>
        <member name="M:ArtGallery.Controllers.ImagesDataController.GetImageDtosForPiece(System.Int32)">
            <summary>
            Get a collection of ImageDto objects that have the given pieceId.
            </summary>
            <param name="id">The id of the Piece foreign key.</param>
            <returns>A collection of ImageDto objects.</returns>
            <example>
            GET: api/ImagesData/GetImageDtos/5
            </example>
        </member>
        <member name="M:ArtGallery.Controllers.ImagesDataController.getImageLocalPath(System.String,System.String)">
            <summary>
            Utility function to construct the local path of an image.
            </summary>
            <param name="imageName">The image file name.</param>
            <param name="imageExt">The image file extension.</param>
            <returns>The local path of the image.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.ImagesDataController.UpdateImage(System.Int32,ArtGallery.Models.Image)">
            <summary>
            Updates an Image in the database given information about the image.
            </summary>
            <param name="id">The image id.</param>
            <param name="image">An Image object, received as POST data.</param>
            <returns>If the update is successful, a NoContent status code is returned. 
            Otherwise, if there is a problem with the model, a BadRequest ActionResult is returned, or a NotFound ActionResult if the image was not updated.</returns>
            <example>
            POST: api/ImagesData/UpdateForm/5
            FORM DATA: Image JSON Object
            </example>
        </member>
        <member name="M:ArtGallery.Controllers.ImagesDataController.CreateImage(System.Int32)">
            <summary>
            Creates an Image in the database given information about the image.
            </summary>
            <param name="id">The id of the Piece foreign key.</param>
            <param>The image file data as multipart content.</param>
            <returns>If the creation is successful, an ActionResult with the id of the form is returned. 
            Otherwise, a BadRequest ActionResult is returned.</returns>
            <example>
            POST: api/ImagesData/CreateImage/5
            FORM DATA: Image JSON Object
            </example>
        </member>
        <member name="M:ArtGallery.Controllers.ImagesDataController.DeleteImage(System.Int32)">
            <summary>
            Deletes the Image in the database with the given id.
            </summary>
            <param name="id">The image id.</param>
            <returns>If the update is successful, an Ok status code is returned. 
            Otherwise, a NotFound ActionResult is returned.</returns>
            <example>
            DELETE: api/ImagesData/5
            </example>
        </member>
        <member name="M:ArtGallery.Controllers.PiecesDataController.getPieceDtoFromPiece(ArtGallery.Models.Piece)">
            <summary>
            A utility function to create an PieceDto object with the data from a Piece object.
            </summary>
            <param name="piece">A Piece object.</param>
            <returns>An PieceDto object containing the information in the piece.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.PiecesDataController.GetPieceDto(System.Int32)">
            <summary>
            Get an PieceDto created with the information in the Piece in the database with the given id.
            </summary>
            <param name="id">An integer representing the id of the required Piece.</param>
            <returns>An PieceDto object.</returns>
            <example>
            GET: api/PiecesData/GetPieceDto/5
            </example>
        </member>
        <member name="M:ArtGallery.Controllers.PiecesDataController.getPieces">
            <summary>
            We only want to send back PieceDto objects, so this is a private utility function
            that retrieves all the Pieces from the database, which will be converted to PieceDtos.
            </summary>
            <returns>A List of Piece objects.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.PiecesDataController.getPiecesForForm(System.Int32)">
            <summary>
            Get only the Pieces that have the given formId value.
            </summary>
            <param name="pieceId">The id of the Piece foreign key.</param>
            <returns>A collection of Piece objects.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.PiecesDataController.getPieceDtos(System.Collections.Generic.IEnumerable{ArtGallery.Models.Piece})">
            <summary>
            A private utility function to convert a collection of Piece objects to PieceDtos.
            </summary>
            <param name="forms">A collection of Piece objects.</param>
            <returns>A collection of PieceDto objects created with the data in the Pieces that were passed in.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.PiecesDataController.GetPieceDtos">
            <summary>
            Get a collection of PieceDto objects that represent all the Pieces in the database.
            </summary>
            <returns>A collection of PieceDto objects.</returns>
            <example>
            GET: api/PiecesData/GetPieceDtos
            </example>
        </member>
        <member name="M:ArtGallery.Controllers.PiecesDataController.GetPieceDtosForForm(System.Int32)">
            <summary>
            Get a collection of PieceDto objects that have the given formId.
            </summary>
            <param name="id">The id of the Form foreign key.</param>
            <returns>A collection of PieceDto objects.</returns>
            <example>
            GET: api/PiecesData/GetPieceDtosForForm/5
            </example>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ArtGallery.Controllers.PiecesDataController.UpdatePiece(System.Int32,ArtGallery.Models.Piece)" -->
        <member name="M:ArtGallery.Controllers.PiecesDataController.CreatePiece(ArtGallery.Models.Piece)">
            <summary>
            Creates a Piece in the database given information about the form.
            </summary>
            <param name="piece">A Piece object, received as POST data.</param>
            <returns>If the creation is successful, an ActionResult with the id of the form is returned. 
            Otherwise, a BadRequest ActionResult is returned.</returns>
            <example>
            POST: api/PiecesData/CreatePiece
            FORM DATA: Piece JSON Object
            </example>
        </member>
        <member name="M:ArtGallery.Controllers.PiecesDataController.DeletePiece(System.Int32)">
            <summary>
            Deletes the Piece in the database with the given id.
            </summary>
            <param name="id">The piece id.</param>
            <returns>If the update is successful, an Ok status code is returned. 
            Otherwise, a NotFound ActionResult is returned.</returns>
            <example>
            DELETE: api/PiecesData/5
            </example>
        </member>
        <member name="M:ArtGallery.Controllers.ControllersHelper.doGetRequest(System.String)">
            <summary>
            Use the client member to perform a GET request on a given url.
            </summary>
            <param name="url">A string of the url for the GET request.</param>
            <returns>An HttpResponseMessage object containing the result of the request.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.ControllersHelper.doPostRequest(System.String,System.Object)">
            <summary>
            Use the client member to perform a POST request. Use the JSON 
            serializer member to convert the obj parameter into JSON format
            to standardize the processing by the controller receiving the request.
            </summary>
            <param name="url">A string of the url for the POST request.</param>
            <param name="obj">An object to be put into JSON format to be processed by the receiving controller</param>
            <returns>An HttpResponseMessage object containing the result of the request.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.ControllersHelper.doMultiPartPostRequest(System.String,System.Net.Http.MultipartFormDataContent)">
            <summary>
            Use the client member to perform a POST request. 
            </summary>
            <param name="url">A string of the url for the POST request.</param>
            <param name="requestcontent">A MultipartFormDataContent object, likely containing data from an uploaded file.</param>
            <returns>An HttpResponseMessage object containing the result of the request.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.ControllersHelper.getFormDto(System.Net.Http.HttpResponseMessage)">
            <summary>
            Retrieve the content from the response parameter and use the serializer to convert
            it into a FormDto object.
            </summary>
            <param name="response">An HttpResponseMessage that contains the result of a GET request for a FormDto.</param>
            <returns>If the response indicates a successful GET request, return a FormDto object. Otherwise return null.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.ControllersHelper.getFormDto(System.Int32)">
            <summary>
            Perform a GET request to retrieve the data for a Form with the given id. 
            </summary>
            <param name="formId">An integer holding the value of the requested Form's id.</param>
            <returns>If the response indicates a successful GET request, return a FormDto object. Otherwise return null.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.ControllersHelper.getFormDtos">
            <summary>
            Perform a GET request to retrieve the data for all the Forms in the database.
            </summary>
            <returns>An IEnumerable of type FormDto. If the GET request was unsuccessful or there are no Forms in the database, the IEnumerable will be empty.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.ControllersHelper.getPieceDto(System.Int32)">
            <summary>
            Perform a GET request to retrieve the data for a Piece with the given id. 
            </summary>
            <param name="pieceId">An integer holding the value of the requested Piece's id.</param>
            <returns>If the response indicates a successful GET request, return a PieceDto object. Otherwise return null.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.ControllersHelper.getPieceDtosForForm(System.Int32)">
            <summary>
            Perform a GET request to retrieve the data for all the Pieces of a given Form in the database.
            </summary>
            <param name="formId">An integer holding the value of the requested Form's id.</param>
            <returns>An IEnumerable of type PieceDto. If the GET request was unsuccessful or there are no Pieces with that Form in the database, the IEnumerable will be empty.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.ControllersHelper.getLatestPieceDtoForForm(System.Int32)">
            <summary>
            Perform a GET request to retrieve the data for the last Piece of a given Form entered in the database.
            </summary>
            <param name="formId">An integer holding the value of the requested Form's id.</param>
            <returns>If the GET request is successful and a Piece with the given form exists in the database, return a PieceDto. Otherwise, return null.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.ControllersHelper.getPieceDtos">
            <summary>
            Perform a GET request to retrieve the data for all the Pieces in the database.
            </summary>
            <returns>An IEnumerable of type PieceDto. If the GET request was unsuccessful or there are no Pieces in the database, the IEnumerable will be empty.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:ArtGallery.Controllers.ControllersHelper.getImageDto(System.Net.Http.HttpResponseMessage)" -->
        <!-- Badly formed XML comment ignored for member "M:ArtGallery.Controllers.ControllersHelper.getPrimaryImageDtoForPiece(System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:ArtGallery.Controllers.ControllersHelper.getImageDto(System.Int32)" -->
        <member name="M:ArtGallery.Controllers.ControllersHelper.getImageDtos(System.Int32)">
            <summary>
            Perform a GET request to retrieve the data for either all the Images in the database or the Images for a given Piece.
            </summary>
            <param name="pieceId">An optional integer parameter holding the requested Piece's id. A value of "0" is used to indicate that all Images should be retrieved.</param>
            <returns>An IEnumerable of type ImageDto. If the GET request was unsuccessful or there are no corresponding Images in the database, the IEnumerable will be empty.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.ControllersHelper.getViewPiece(ArtGallery.Models.PieceDto)">
            <summary>
            Perform a GET request to retrieve the data required to construct a ViewPiece object for the given PieceDto.
            </summary>
            <param name="pieceDto">The Piece for which the ViewPiece object is requested.</param>
            <returns>A ViewPiece object. The member values may be null if the GET requests were unsuccessful or there are no such members in the database.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.ControllersHelper.getViewPiece(System.Int32)">
            <summary>
            Perform required GET requests to retrieve the data required to construct a ViewPiece model for the given Piece.
            </summary>
            <param name="pieceId">An integer holding the requested Piece's id.</param>
            <returns>A ViewPiece object. The member values may be null if the GET requests were unsuccessful or there are no such members in the database.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.ControllersHelper.getViewPieceWithImages(System.Int32)">
            <summary>
            Perform required GET requests to retrieve the data required to construct a ViewPieceWithImages model for the given Piece.
            </summary>
            <param name="pieceId">An integer holding the requested Piece's id.</param>
            <returns>A ViewPiece object. The member values may be null if the GET requests were unsuccessful or there are no such members in the database.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.ControllersHelper.getUpdatePiece(ArtGallery.Models.PieceDto)">
            <summary>
            Perform a GET request to retrieve the data required to construct an UpdatePiece object for the given PieceDto.
            </summary>
            <param name="pieceDto">The Piece for which the UpdatePiece object is requested.</param>
            <returns>An UpdatePiece object. The member values may be null if the GET requests were unsuccessful or there are no such members in the database.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.ControllersHelper.getUpdatePiece(System.Int32)">
            <summary>
            Perform required GET requests to retrieve the data required to construct an UpdatePiece object for the given Piece.
            </summary>
            <param name="pieceId">An integer holding the requested Piece's id.</param>
            <returns>An UpdatePiece object. The member values may be null if the GET requests were unsuccessful or there are no such members in the database.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.ControllersHelper.getUpdateImage(System.Int32,System.Int32)">
            <summary>
            Perform required GET requests to retrieve the data required to construct an UpdateImage object for an Image of a given Piece.
            </summary>
            <param name="pieceId">An integer holding the requested Piece's id.</param>
            <param name="imageId">An optional integer parameter holding the id of a specific Image. A value of "0" is used to indicate that no Image is required.</param>
            <returns>An UpdateImage object. The member values may be null if the GET requests were unsuccessful or there are no such members in the database, or if the imageId was 0.</returns>
        </member>
        <member name="M:ArtGallery.Controllers.ControllersHelper.getViewImage(System.Int32)">
            <summary>
            Perform required GET requests to retrieve the data required to construct a ViewImage object for the given Image.
            </summary>
            <param name="imageId">An integer holding the requested Image's id.</param>
            <returns>A ViewImage object. The member values may be null if the GET requests were unsuccessful or there are no such members in the database.</returns>
        </member>
    </members>
</doc>
